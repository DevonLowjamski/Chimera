using UnityEngine;
using ProjectChimera.Data.UI;


namespace ProjectChimera.Data.UI
{
    /// <summary>
    /// Example configurations for UI Data Binding ScriptableObjects.
    /// This file demonstrates proper configuration patterns to prevent Unity Editor errors.
    /// </summary>
    public static class UIDataBindingExamples
    {
        /// <summary>
        /// Creates a properly configured UI Data Binding asset for Plant Health display
        /// </summary>
        public static UIDataBindingSO CreatePlantHealthBinding()
        {
            var binding = ScriptableObject.CreateInstance<UIDataBindingSO>();
            
            // Set binding name and description using proper API (no reflection needed)
            binding.name = "PlantHealthBinding";
            binding.InitializeBinding(
                bindingName: "PlantHealthDisplay",
                description: "Displays current plant health percentage",
                sourceManagerType: "PlantManager",
                sourcePropertyPath: "SelectedPlant.Health",
                targetUIElement: "HealthBar",
                targetProperty: "fillAmount"
            );
            
            return binding;
        }
        
        /// <summary>
        /// Creates a properly configured UI Data Binding asset for Environmental Temperature
        /// </summary>
        public static UIDataBindingSO CreateTemperatureBinding()
        {
            var binding = ScriptableObject.CreateInstance<UIDataBindingSO>();
            
            binding.name = "TemperatureBinding";
            binding.InitializeBinding(
                bindingName: "EnvironmentalTemperature",
                description: "Displays current environmental temperature",
                sourceManagerType: "EnvironmentalManager",
                sourcePropertyPath: "CurrentConditions.Temperature",
                targetUIElement: "TemperatureText",
                targetProperty: "text"
            );
            
            return binding;
        }
        
        /// <summary>
        /// Creates a properly configured UI Data Binding asset for Currency Display
        /// </summary>
        public static UIDataBindingSO CreateCurrencyBinding()
        {
            var binding = ScriptableObject.CreateInstance<UIDataBindingSO>();
            
            binding.name = "CurrencyBinding";
            binding.InitializeBinding(
                bindingName: "PlayerCurrency",
                description: "Displays player's current currency",
                sourceManagerType: "EconomyManager",
                sourcePropertyPath: "PlayerMoney",
                targetUIElement: "CurrencyText",
                targetProperty: "text",
                dataConverter: DataConverter.ToCurrency
            );
            
            return binding;
        }
    }
}