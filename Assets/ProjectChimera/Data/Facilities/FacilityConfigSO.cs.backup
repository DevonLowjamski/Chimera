using UnityEngine;
using System.Collections.Generic;


namespace ProjectChimera.Data.Facilities
{
    /// <summary>
    /// BASIC: Simple facility configuration for Project Chimera.
    /// Focuses on essential facility setup without complex infrastructure and regulatory requirements.
    /// </summary>
    [CreateAssetMenu(fileName = "New Facility Config", menuName = "Project Chimera/Facilities/Facility Config", order = 2)]
    public class FacilityConfigSO : ScriptableObject
    {
        [Header("Basic Facility Settings")]
        [SerializeField] private string _facilityName = "Basic Facility";
        [SerializeField] private FacilityType _facilityType = FacilityType.IndoorCultivation;
        [SerializeField] private Vector3 _defaultSize = new Vector3(20f, 3f, 15f);
        [SerializeField] private string _description = "A basic cultivation facility";

        [Header("Simple Equipment")]
        [SerializeField] private List<string> _recommendedEquipment = new List<string>();
        [SerializeField] private float _baseCost = 10000f;

        // Basic properties
        public string FacilityName => _facilityName;
        public FacilityType FacilityType => _facilityType;
        public Vector3 DefaultSize => _defaultSize;
        public string Description => _description;
        public List<string> RecommendedEquipment => _recommendedEquipment;
        public float BaseCost => _baseCost;

        /// <summary>
        /// Create basic facility instance
        /// </summary>
        public FacilityInstance CreateBasicFacility(string facilityName, Vector3 position)
        {
            return new FacilityInstance
            {
                FacilityId = System.Guid.NewGuid().ToString(),
                FacilityName = facilityName,
                FacilityType = _facilityType,
                FacilitySize = _defaultSize,
                FacilityPosition = position,
                ConstructionProgress = 0f,
                IsOperational = false
            };
        }

        /// <summary>
        /// Calculate floor area
        /// </summary>
        public float CalculateFloorArea()
        {
            return _defaultSize.x * _defaultSize.z;
        }

        /// <summary>
        /// Get facility summary
        /// </summary>
        public FacilitySummary GetSummary()
        {
            return new FacilitySummary
            {
                Name = _facilityName,
                Type = _facilityType,
                Size = _defaultSize,
                FloorArea = CalculateFloorArea(),
                EquipmentCount = _recommendedEquipment.Count,
                BaseCost = _baseCost
            };
        }

        /// <summary>
        /// Validate configuration
        /// </summary>
        public bool IsValid()
        {
            return !string.IsNullOrEmpty(_facilityName) &&
                   _defaultSize.x > 0 && _defaultSize.y > 0 && _defaultSize.z > 0 &&
                   _baseCost > 0;
        }
    }

    // FacilityInstance class moved to FacilityData.cs to avoid duplication

    // FacilityType enum moved to FacilityEnums.cs

    /// <summary>
    /// Facility summary
    /// </summary>
    [System.Serializable]
    public struct FacilitySummary
    {
        public string Name;
        public FacilityType Type;
        public Vector3 Size;
        public float FloorArea;
        public int EquipmentCount;
        public float BaseCost;
    }
}
